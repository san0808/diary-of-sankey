name: Build and Deploy Blog

on:
  # Trigger on pushes to main branch
  push:
    branches: [ main ]
  
  # Allow manual triggering
  workflow_dispatch:
  
  # Trigger via repository dispatch (for Notion webhooks)
  repository_dispatch:
    types: [notion-update]
  
  # Schedule periodic syncs (every 15 minutes)
  schedule:
    - cron: '*/15 * * * *'

# Permissions needed for deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Ensure only one deployment runs at a time
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: '18'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
      env:
        CI: true
    
    - name: Lint code
      run: npm run lint
      continue-on-error: true
    
    - name: Sync content from Notion
      run: npm run sync
      env:
        NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
        NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        AUTHOR_NAME: ${{ vars.AUTHOR_NAME || 'Sanket Bhat' }}
        BLOG_TITLE: ${{ vars.BLOG_TITLE || 'Diary of Sankey' }}
        SITE_URL: ${{ vars.SITE_URL || 'https://diaryofsankey.com' }}
        AUTHOR_BIO: ${{ vars.AUTHOR_BIO || 'Engineer, learner, and occasional writer' }}
        AUTHOR_TWITTER: ${{ vars.AUTHOR_TWITTER || '@sankey' }}
        AUTHOR_GITHUB: ${{ vars.AUTHOR_GITHUB || 'sanket08' }}
        AUTHOR_LINKEDIN: ${{ vars.AUTHOR_LINKEDIN || 'sanket-bhat' }}
        GOOGLE_ANALYTICS_ID: ${{ vars.GOOGLE_ANALYTICS_ID }}
        NODE_ENV: production
    
    - name: Build site
      run: npm run build
      env:
        NODE_ENV: production
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
      if: github.ref == 'refs/heads/main'
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      if: github.ref == 'refs/heads/main'
      with:
        path: './dist'
    
    # Alternative: Deploy to Netlify
    - name: Deploy to Netlify
      if: github.ref == 'refs/heads/main' && vars.DEPLOY_TARGET == 'netlify'
      uses: nwtgck/actions-netlify@v2.1
      with:
        publish-dir: './dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Deploy to GitHub Pages
  deploy:
    if: github.ref == 'refs/heads/main' && vars.DEPLOY_TARGET != 'netlify'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Notify on failure
  notify:
    if: failure()
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Notify failure
        run: |
          echo "Build failed! Check the logs for details."
          # You could add Discord/Slack notifications here 