name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-lint:
    name: Test & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit -- --ci --coverage --watchAll=false --maxWorkers=2
        env:
          NODE_ENV: test
          CI: true
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}

      - name: Run integration tests
        run: npm run test:integration -- --ci --watchAll=false --maxWorkers=1 --testTimeout=20000
        env:
          NODE_ENV: test
          CI: true
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}

      - name: Generate combined coverage report
        run: npm test -- --ci --coverage --watchAll=false --maxWorkers=2 --passWithNoTests
        env:
          NODE_ENV: test
          CI: true
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 7

      - name: Upload test results  
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            coverage/lcov.info
            coverage/clover.xml
          retention-days: 7

  content-validation:
    name: Content Validation
    runs-on: ubuntu-latest
    needs: test-and-lint
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Test Notion connection
        run: |
          node -e '
            const NotionClient = require("./scripts/utils/notion-client");
            const client = new NotionClient();
            client.testConnection()
              .then(connected => {
                if (connected) {
                  console.log("‚úÖ Notion connection successful");
                  process.exit(0);
                } else {
                  console.error("‚ùå Notion connection failed");
                  process.exit(1);
                }
              })
              .catch(err => {
                console.error("‚ùå Notion connection error:", err.message);
                process.exit(1);
              });
          '
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}

  build-site:
    name: Build Static Site
    runs-on: ubuntu-latest
    needs: test-and-lint
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build static site
        run: npm run build
        env:
          SITE_URL: ${{ secrets.SITE_URL || 'https://blog.devsanket.com' }}
          AUTHOR_NAME: ${{ secrets.AUTHOR_NAME || 'Sanket Bhat' }}
          BLOG_TITLE: ${{ secrets.BLOG_TITLE || 'Diary of Sankey' }}

  # Note: Vercel handles deployment automatically via GitHub integration
  # This job validates that the build works correctly
  deploy:
    name: Deploy Notification
    runs-on: ubuntu-latest
    needs:
      - test-and-lint
      - content-validation
      - build-site
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Deployment Status
        run: |
          echo "üöÄ All checks passed and site built successfully!"
          echo "üì° Vercel will automatically deploy this commit"
          echo "üîó Check deployment status at: https://vercel.com/dashboard"
